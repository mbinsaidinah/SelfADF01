{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SelfADF01"
		},
		"AzureBlobStorageGeneral_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorageGeneral'"
		},
		"AzureBlobStoragedflabstoragegg2qq_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStoragedflabstoragegg2qq'"
		},
		"AzureBlobStoragewithVnet_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStoragewithVnet'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureDatabricks3 premium_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks3 premium'"
		},
		"AzurePostgreSql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql1'"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'"
		},
		"LocalSQLServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LocalSQLServer'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"adlstestfikri_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adlstestfikri'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://fikriadls.dfs.core.windows.net/"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://mydevkey01.vault.azure.net/"
		},
		"adlstestfikri_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://fikriadls.dfs.core.windows.net/"
		},
		"blobadflabstoragegg2qqIAM_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://adflabstoragegg2qq.blob.core.windows.net"
		},
		"AzureBlobStorage626_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/887c8aa5-917a-430d-9235-90d8e4950357/resourceGroups/MySelfTraingRG/providers/Microsoft.Storage/storageAccounts/adlsvnet01"
		},
		"AzureBlobStorage626_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzurePostgreSql794_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/887c8aa5-917a-430d-9235-90d8e4950357/resourceGroups/MySelfTraingRG/providers/Microsoft.DBforPostgreSQL/servers/fikripostgresql01"
		},
		"AzurePostgreSql794_properties_groupId": {
			"type": "string",
			"defaultValue": "postgresqlServer"
		},
		"myblobvnet_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/887c8aa5-917a-430d-9235-90d8e4950357/resourceGroups/MySelfTraingRG/providers/Microsoft.Storage/storageAccounts/myblobstorage011"
		},
		"myblobvnet_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AdventureworkLT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1 Azure SQL DB",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "Select * from Airport",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Azure_SQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DBName": "AirlinePerformance-OLTP"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup2 Self Hosted SQL DB",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from dbo.DimDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SelfHostedSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DBName": "AdventureWorksDW2019"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-30T08:47:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Azure_SQLDB')]",
				"[concat(variables('factoryId'), '/datasets/SelfHostedSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BranchingChaining')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceBlobTxt",
								"type": "DatasetReference",
								"parameters": {
									"container": "@pipeline().parameters.sourceBlobContainer"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkBlok",
								"type": "DatasetReference",
								"parameters": {
									"container": "@pipeline().parameters.sinkBlobContainer",
									"file": "@concat(pipeline().RunId, '.txt')"
								}
							}
						]
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-06.eastus2.logic.azure.com:443/workflows/4ebeb981688c449eb7c3da1fcc83139f/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=lqHDrYyyDs9KdFSv3Q0Afpx_ut3nsgj73cDf59v_fVc",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": "@{activity('Copy1').output.dataWritten}",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sourceBlobContainer": {
						"type": "string"
					},
					"sinkBlobContainer": {
						"type": "string"
					},
					"receiver": {
						"type": "string"
					}
				},
				"folder": {
					"name": "L200 Module tryout"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceBlobTxt')]",
				"[concat(variables('factoryId'), '/datasets/SinkBlok')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Activity Custom Query')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@concat('select distinct * from ',activity('LookupMetadata').output.value[0].naming,'.Clone_', activity('LookupMetadata').output.value[1].naming)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "truncate table [dbo].[Clone_DimCustomer2];",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MySQLLocal",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@concat('Clone_', activity('LookupMetadata').output.value[1].naming)",
										"type": "Expression"
									},
									"schema": {
										"value": "@activity('LookupMetadata').output.value[0].naming",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "MySQLLocal",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@concat('Clone_', activity('LookupMetadata').output.value[1].naming,'2')",
										"type": "Expression"
									},
									"schema": {
										"value": "@activity('LookupMetadata').output.value[0].naming",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LookupMetadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from dbo.tablenames",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "MySQLLocalTablename",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2209140050001514 - Copy Activity"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MySQLLocal')]",
				"[concat(variables('factoryId'), '/datasets/MySQLLocalTablename')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Activity SQL DW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('select distinct * from ',activity('LookupMetadata').output.value[0].naming, '.', activity('LookupMetadata').output.value[1].naming)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table [Staging].[Clone_DimAirline]",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 3,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "adlstestfikri",
									"type": "LinkedServiceReference"
								},
								"path": "logtest/2209140050001514"
							}
						},
						"inputs": [
							{
								"referenceName": "SQLDW",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@activity('LookupMetadata').output.value[1].naming",
										"type": "Expression"
									},
									"schema": {
										"value": "@activity('LookupMetadata').output.value[0].naming",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDW",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@concat('Clone_', activity('LookupMetadata').output.value[1].naming)",
										"type": "Expression"
									},
									"schema": {
										"value": "@activity('LookupMetadata').output.value[0].naming",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LookupMetadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select * from dbo.tablenames",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLDWTablename",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2209140050001514 - Copy Activity"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLDW')]",
				"[concat(variables('factoryId'), '/datasets/SQLDWTablename')]",
				"[concat(variables('factoryId'), '/linkedServices/adlstestfikri')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Databrick premium run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook3 premium",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/mbinsaidinah@microsoft.com/testfrjaya"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks3 premium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks3 premium')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Run_Notebook_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/mbinsaidinah@microsoft.com/adfrun/adfrun",
							"baseParameters": {
								"input": {
									"value": "@pipeline().parameters.name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 2
						}
					},
					{
						"name": "Notebook2",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/mbinsaidinah@microsoft.com/adfrun/adfrun",
							"baseParameters": {
								"input": {
									"value": "@pipeline().parameters.name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Notebook3 premium",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/mbinsaidinah@microsoft.com/mynotebook"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks3 premium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"name": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-21T06:01:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks2')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks3 premium')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy between different storage account')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blobcsv01",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adlstestfikricsv01",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/blobcsv01')]",
				"[concat(variables('factoryId'), '/datasets/adlstestfikricsv01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://management.azure.com/subscriptions/887c8aa5-917a-430d-9235-90d8e4950357/resourceGroups/SeaDev2/providers/Microsoft.DataFactory/factories/SeaDevADF/pipelineruns/ff904dd0-ba1e-4e7e-a76f-0ddc7e50b641/cancel?api-version=2018-06-01",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n“message”: ”Cancelling the pipeline”\n}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": {
									"value": "https://management.azure.com/",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2210030030000418 - Cancel pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://management.azure.com/subscriptions/887c8aa5-917a-430d-9235-90d8e4950357/resourceGroups/MySelfTraingRG/providers/Microsoft.DataFactory/factories/SelfADF01/pipelineruns/eb8daf6e-7f22-4f28-9c3b-6388a13a05dd/cancel?api-version=2018-06-01",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n“message”: ”Cancelling the pipeline”\n}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": {
									"value": "https://management.azure.com/",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2210030030000418 - Cancel pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqltoblob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BlobtoBlob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BinaryDataset",
								"type": "DatasetReference",
								"parameters": {
									"directory": "ADF L200/Input"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "BinaryDataset",
								"type": "DatasetReference",
								"parameters": {
									"directory": "ADF L200/Output"
								}
							}
						]
					},
					{
						"name": "CopySQLtoCSV",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "BlobtoBlob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from [dbo].[DimCurrency]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CurrencyKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "CurrencyAlternateKey",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "CurrencyName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQLDBHosted",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BlobCSV",
								"type": "DatasetReference",
								"parameters": {
									"directory": "ADF L200/Output",
									"filename": "DimCurrency.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "L200 Module tryout"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BinaryDataset')]",
				"[concat(variables('factoryId'), '/datasets/SQLDBHosted')]",
				"[concat(variables('factoryId'), '/datasets/BlobCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wait_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1000
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "udt_catalog",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "udt_schema",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "udt_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "attribute_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ordinal_position",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "attribute_default",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_nullable",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "data_type",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "character_maximum_length",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "character_octet_length",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "character_set_catalog",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "character_set_schema",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "character_set_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "collation_catalog",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "collation_schema",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "collation_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "numeric_precision",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "numeric_precision_radix",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "numeric_scale",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "datetime_precision",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "interval_type",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "interval_precision",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "attribute_udt_catalog",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "attribute_udt_schema",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "attribute_udt_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "scope_catalog",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "scope_schema",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "scope_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "maximum_cardinality",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "dtd_identifier",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_derived_reference_attribute",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "information_schema",
					"table": "attributes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": {
							"value": "@dataset().DBName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageGeneral",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "L200 Module tryout"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": "data"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageGeneral')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageGeneral",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "L200 Module tryout"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageGeneral')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageGeneral",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "small_radio_json.json",
						"folderPath": "tables",
						"container": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"ts": {
							"type": "integer"
						},
						"userId": {
							"type": "string"
						},
						"sessionId": {
							"type": "integer"
						},
						"page": {
							"type": "string"
						},
						"auth": {
							"type": "string"
						},
						"method": {
							"type": "string"
						},
						"status": {
							"type": "integer"
						},
						"level": {
							"type": "string"
						},
						"itemInSession": {
							"type": "integer"
						},
						"location": {
							"type": "string"
						},
						"lastName": {
							"type": "string"
						},
						"firstName": {
							"type": "string"
						},
						"registration": {
							"type": "integer"
						},
						"gender": {
							"type": "string"
						},
						"artist": {
							"type": "string"
						},
						"song": {
							"type": "string"
						},
						"length": {
							"type": "number"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageGeneral')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json2Sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageGeneral",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "tables/new",
						"container": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"ts": {
							"type": "integer"
						},
						"userId": {
							"type": "string"
						},
						"sessionId": {
							"type": "integer"
						},
						"page": {
							"type": "string"
						},
						"auth": {
							"type": "string"
						},
						"method": {
							"type": "string"
						},
						"status": {
							"type": "integer"
						},
						"level": {
							"type": "string"
						},
						"itemInSession": {
							"type": "integer"
						},
						"location": {
							"type": "string"
						},
						"lastName": {
							"type": "string"
						},
						"firstName": {
							"type": "string"
						},
						"registration": {
							"type": "integer"
						},
						"gender": {
							"type": "string"
						},
						"artist": {
							"type": "string"
						},
						"song": {
							"type": "string"
						},
						"length": {
							"type": "number"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageGeneral')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySQLLocal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LocalSQLServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "AdventureWorksDW2019"
					}
				},
				"parameters": {
					"tablename": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LocalSQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySQLLocalTablename')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LocalSQLServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "AdventureWorksDW2019"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCurrency"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LocalSQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDBHosted')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LocalSQLServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "AdventureWorksDW2019"
					}
				},
				"folder": {
					"name": "L200 Module tryout"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LocalSQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDWTablename')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedSQLDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LocalSQLServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": {
							"value": "@dataset().DBName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"DBName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LocalSQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkBlok')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageGeneral",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string",
						"defaultValue": "@pipeline().parameters.sinkBlobContainer"
					},
					"file": {
						"type": "string",
						"defaultValue": "@concat(pipeline().RunId, '.txt')"
					}
				},
				"folder": {
					"name": "L200 Module tryout"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageGeneral')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceBlobTxt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageGeneral",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string",
						"defaultValue": "@pipeline().parameters.sourceBlobContainer"
					},
					"file": {
						"type": "string",
						"defaultValue": "input.txt"
					}
				},
				"folder": {
					"name": "L200 Module tryout"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageGeneral')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlstestfikricsv01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlstestfikri",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adlstestfikri')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobcsv01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragedflabstoragegg2qq",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MASTER201612.csv",
						"container": "blobsource"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragedflabstoragegg2qq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageGeneral')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageGeneral_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStoragedflabstoragegg2qq')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStoragedflabstoragegg2qq_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStoragewithVnet')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStoragewithVnet_connectionString')]"
				},
				"connectVia": {
					"referenceName": "VnetIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/VnetIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4831337339444541.1.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "2",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "10.4.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4831337339444541.1.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/887c8aa5-917a-430d-9235-90d8e4950357/resourceGroups/MySelfTraingRG/providers/Microsoft.Databricks/workspaces/DataBrick01",
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "10.4.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks3 premium')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-8257899525734908.8.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks3 premium_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "2",
					"newClusterVersion": "10.4.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "VnetIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/VnetIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocalSQLServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LocalSQLServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "MSSQLSelfHostedIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/MSSQLSelfHostedIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlstestfikri')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adlstestfikri_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adlstestfikri_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobadflabstoragegg2qqIAM')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('blobadflabstoragegg2qqIAM_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "Storage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowtrigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DataFlowpipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-07-31T08:30:00Z",
						"endTime": "2022-08-01T00:30:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DataFlowpipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/L200_module_tryout')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "sqltoblob",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-08-04T03:14:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/sqltoblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Databrick premium run",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 2,
						"startTime": "2022-09-22T10:05:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Databrick premium run')]",
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MSSQLSelfHostedIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "My local sql server",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VnetIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US 2",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Json2Sink",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select2"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ts as integer,",
						"          userId as string,",
						"          sessionId as integer,",
						"          page as string,",
						"          auth as string,",
						"          method as string,",
						"          status as integer,",
						"          level as string,",
						"          itemInSession as integer,",
						"          location as string,",
						"          lastName as string,",
						"          firstName as string,",
						"          registration as integer,",
						"          gender as string,",
						"          artist as string,",
						"          song as string,",
						"          length as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> source1",
						"source1 select(mapColumn(",
						"          ts,",
						"          userId,",
						"          sessionId,",
						"          page,",
						"          auth,",
						"          method,",
						"          status,",
						"          level,",
						"          itemInSession,",
						"          location,",
						"          lastName,",
						"          firstName,",
						"          registration,",
						"          gender,",
						"          artist,",
						"          song,",
						"          length",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 aggregate(groupBy(gender,",
						"          level),",
						"     noOfaggre = count()) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ts as integer,",
						"          userId as string,",
						"          sessionId as integer,",
						"          page as string,",
						"          auth as string,",
						"          method as string,",
						"          status as integer,",
						"          level as string,",
						"          itemInSession as integer,",
						"          location as string,",
						"          lastName as string,",
						"          firstName as string,",
						"          registration as integer,",
						"          gender as string,",
						"          artist as string,",
						"          song as string,",
						"          length as double",
						"     ),",
						"     partitionFileNames:['output.json'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/Json2Sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage626')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage626_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage626_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzurePostgreSql794')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzurePostgreSql794_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzurePostgreSql794_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/myblobvnet')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('myblobvnet_properties_privateLinkResourceId')]",
				"groupId": "[parameters('myblobvnet_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}